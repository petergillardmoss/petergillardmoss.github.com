{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10940\viewh15980\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs26 \cf0 \

\b Stategy\
\

\b0 Start: \
Triggered by Li Xiao's presentation and his thoughts about 'not special' and working to fit Mingle to the cloud rather than cloud to Mingle\
Ian Robinson talks about how teams should identify what is core and what is commodity and productive teams solve core problems not commodity problems.\
Related to some criticisms of Netflix reinventing AWS infrastructure, particularly ElasticBeanStalk\
\

\b Core driver: this is as much a Pillar 2 project as a Pillar 1 project.\
Goal: next year ThoughtWorks at AWS re:invent telling everyone how we do CD on the cloud.\

\b0 \

\b Core idea: write applications to work to the cloud don't work the cloud to the applications.\

\b0 \
So\'85\
We want to focus on the problems that are genuinely unique to us and spend out efforts there.  Any time spent solving well established problems is potential waste.\
Caveats:  unless it has a very clear advantage such as it doesn't meet our principles or gives a business advantage or the effort to adapt is greater than building something ourselves.\
\
Examples: \
* building a virtualization layer on a virtualization layer re-solving an already established problem because of limitations in the product.  Has strategic benefit but is still expensive.\
* use of graphite to collect long term metrics over cloudwatch has a very specific piece of value which is long term analysis.\
* cloudformation\
\
Thoughts: \
Problems for running/scaling web apps are well established and there are a multitude of PaaS providers including ElasticBeanStalk.  We should investigate their suitability against our principles.\
\
Some commodity problems are solved by OS software.  If feasible we should work to enhance existing software and contribute back rather than build our own thing from scratch.\
\
Then we can spend time solving the important problems which bring us real value and move us closer to reaching our objectives.\
\
Such as\'85\
Building a jobs grid.  Problem particular to our software which is core to the way it works, is architecturally sound but lacks a commodity solution.}